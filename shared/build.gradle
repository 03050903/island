apply plugin: 'com.android.feature'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 21
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    baseFeature true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        check 'NewApi'
        abortOnError true
        xmlReport false
        textReport true
        textOutput "stdout"
    }

    // Enable lint checking in all build variants.
    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def lintTask = tasks["lint${variant.name.capitalize()}"]
            output.assemble.dependsOn lintTask
        }
    }
}

dependencies {
    application project(':assembly')
    feature project(':engine')

    api project(':deagle')
    api 'net.sourceforge.streamsupport:android-retrostreams:1.5.6'
    api 'com.google.guava:guava:22.0-android'
    api 'com.android.support:support-annotations:27.0.2'
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'com.google.android.gms:play-services-analytics:11.8.0'
    implementation 'com.google.firebase:firebase-analytics:11.8.0'
    implementation 'com.google.firebase:firebase-config:11.8.0'
    api('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') { transitive = true }
    implementation 'com.oasisfeng.condom:library:2.2.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.8.9'

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test:runner:0.5') { exclude group: 'com.android.support', module: 'support-annotations' }
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
}
